#version 410 core

layout(triangles, equal_spacing, ccw) in;

uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;
uniform mat4 ModelMatrix;
//uniform sampler2D c_texture;
//uniform sampler2D n_texture;
//uniform sampler2D d_texture;
//uniform sampler2D d_texture1;
//uniform sampler2D d_texture2;
//uniform float cascadeEndClipSpace[3];

struct OutputPatch
{
  vec3 WorldPos_B030;
  vec3 WorldPos_B021;
  vec3 WorldPos_B012;
  vec3 WorldPos_B003;
  vec3 WorldPos_B102;
  vec3 WorldPos_B201;
  vec3 WorldPos_B300;
  vec3 WorldPos_B210;
  vec3 WorldPos_B120;
  vec3 WorldPos_B111;
  vec4 Normal[3];
  vec2 TexCoord[3];
  //vec4 ShadowCoord_ES_in[3];
  //mat3 TBNMatrix_p_ES_in;
};

patch in OutputPatch oPatch;

out vec3 WorldPos0;
out vec2 texCoord;
out vec4 o_normal;
//out float ClipSpacePosZ;
//out vec4 ShadowCoord[3];
//out mat3 TBNMatrix_p;


vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)
{
    return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;
}

vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
}

void main()
{
  // Interpolate the attributes of the output vertex using the barycentric coordinates
  texCoord = interpolate2D(oPatch.TexCoord[0], oPatch.TexCoord[1], oPatch.TexCoord[2]);
  o_normal = vec4( interpolate3D(oPatch.Normal[0].xyz, oPatch.Normal[1].xyz, oPatch.Normal[2].xyz), 0.0 );

  float u = gl_TessCoord.x;
  float v = gl_TessCoord.y;
  float w = gl_TessCoord.z;

  float uPow3 = pow(u, 3);
  float vPow3 = pow(v, 3);
  float wPow3 = pow(w, 3);
  float uPow2 = pow(u, 2);
  float vPow2 = pow(v, 2);
  float wPow2 = pow(w, 2);

  WorldPos0 = oPatch.WorldPos_B300 * wPow3 +
    oPatch.WorldPos_B030 * uPow3 +
    oPatch.WorldPos_B003 * vPow3 +
    oPatch.WorldPos_B210 * 3.0 * wPow2 * u +
    oPatch.WorldPos_B120 * 3.0 * w * uPow2 +
    oPatch.WorldPos_B201 * 3.0 * wPow2 * v +
    oPatch.WorldPos_B021 * 3.0 * uPow2 * v +
    oPatch.WorldPos_B102 * 3.0 * w * vPow2 +
    oPatch.WorldPos_B012 * 3.0 * u * vPow2 +
    oPatch.WorldPos_B111 * 6.0 * w * u * v;

  //ShadowCoord[0] = vec4(1.0);// interpolate3D( oPatch.ShadowCoord_ES_in[0][0].xyz, oPatch.ShadowCoord_ES_in[1][0].xyz, oPatch.ShadowCoord_ES_in[2][0].xyz ), 0.0);
  //ShadowCoord[1] = vec4(1.0);//vec4( interpolate3D( oPatch.ShadowCoord_ES_in[0][1].xyz, oPatch.ShadowCoord_ES_in[1][1].xyz, oPatch.ShadowCoord_ES_in[2][1].xyz ), 0.0);
  //ShadowCoord[2] = vec4(1.0);//vec4( interpolate3D( oPatch.ShadowCoord_ES_in[0][2].xyz, oPatch.ShadowCoord_ES_in[1][2].xyz, oPatch.ShadowCoord_ES_in[2][2].xyz ), 0.0);

  //TBNMatrix_p = oPatch.TBNMatrix_p_ES_in;

  gl_Position = ProjectionMatrix * ViewMatrix * vec4(WorldPos0, 1.0);
  //ClipSpacePosZ = gl_Position.z;
}

